// <auto-generated />
using System;
using MagicVillaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVillaAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240509075404_SeedVillas")]
    partial class SeedVillas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVillaAPI.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 5, 9, 7, 54, 4, 97, DateTimeKind.Utc).AddTicks(9067),
                            Details = "With personal Pool and Beach View",
                            Name = "Royal Villa",
                            Occupancy = 5,
                            Rate = 200,
                            Sqft = 200
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 5, 9, 7, 54, 4, 97, DateTimeKind.Utc).AddTicks(9070),
                            Details = "With 2 Floor, Jungle view and personal Pool",
                            Name = "Lux Villa",
                            Occupancy = 8,
                            Rate = 350,
                            Sqft = 250
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 5, 9, 7, 54, 4, 97, DateTimeKind.Utc).AddTicks(9072),
                            Details = "With Pool view and terrace",
                            Name = "Diamond Villa",
                            Occupancy = 4,
                            Rate = 150,
                            Sqft = 150
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
